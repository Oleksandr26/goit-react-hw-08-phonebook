{"version":3,"file":"static/js/310.5dac4c20.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\n// import { FaUser, FaPhoneAlt } from 'react-icons/fa';\nimport { addContact } from '../../features/contact/OperationsWithContacts';\n// import message from 'helpers/Message';\nimport s from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const submitData = event => {\n    event.preventDefault();\n    if (contacts.find(({ name }) => name === contact.name)) {\n      // message.warning(\n      //   `${contact.name} is already in contacts`,\n      //   '',\n      //   'I understand'\n      // );\n    } else {\n      dispatch(addContact(contact));\n    }\n    setContact({ name: '', number: '' });\n  };\n\n  const saveData = event => {\n    const { name, value } = event.target;\n    setContact(state => ({ ...state, [name]: value }));\n  };\n\n  return (\n    <form className={s.form} onSubmit={submitData}>\n      <label className={s.label}>\n        <span className={s.label__text}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={contact.name}\n          onChange={saveData}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        <span className={s.label__text}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          value={contact.number}\n          onChange={saveData}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n// export default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux/es/exports';\n// import { RiDeleteBin5Line } from 'react-icons/ri';\nimport {\n  getContacts,\n  deleteContact,\n} from '../../features/contact/OperationsWithContacts';\nimport s from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) dispatch(getContacts());\n  }, [dispatch, isLoggedIn]);\n\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const visibleList = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  return visibleList.length > 0 ? (\n    <ul className={s.list}>\n      {visibleList.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <div className={s.user}>\n            <span>{name} :</span>\n            <span>{number}</span>\n          </div>\n          <button\n            className={s.button}\n            type=\"button\"\n            title=\"delete contact\"\n            onClick={() => onDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <div style={{ textAlign: 'center' }}>You haven't contacts yet</div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux/es/exports';\nimport { filterContacts } from '../../features/contact/contactAction';\nimport s from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = event => {\n    dispatch(filterContacts(event.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <div className={s.container}>\n      <label className={s.label}>\n        <span>Find contacts by name:</span>\n        <input type=\"text\" className={s.input} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <h2 style={{ textAlign: 'center', marginBottom: '30px' }}>Phonebook</h2>\n      <div>\n        <ContactForm />\n        <div>\n          <Filter />\n          <h2 style={{ textAlign: 'center', marginBottom: '10px' }}>\n            Contacts\n          </h2>\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","useState","name","number","contact","setContact","contacts","useSelector","state","items","dispatch","useDispatch","saveData","event","target","value","className","s","onSubmit","preventDefault","find","addContact","type","onChange","pattern","title","required","ContactList","filter","isLoggedIn","auth","useEffect","getContacts","visibleList","toLowerCase","includes","length","map","id","onClick","deleteContact","onDelete","style","textAlign","Filter","filterContacts","currentTarget","marginBottom"],"sourceRoot":""}